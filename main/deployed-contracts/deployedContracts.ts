/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */

interface ContractDetails {
  address: string;
  abi: any[];
  inheritedFunctions?: any;
}

interface DeployedContracts {
  [chainId: string]: {
    [contractName: string]: ContractDetails;
  };
}

export const deployedContracts: DeployedContracts = {
  31337: {
    Crediflex: {
      address: "0x367761085bf3c12e5da2df99ac6e1a824612b8fb",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_serviceManager",
              type: "address",
              internalType: "address",
            },
            {
              name: "_usdeUsdDataFeed",
              type: "address",
              internalType: "address",
            },
            {
              name: "_wethUsdDataFeed",
              type: "address",
              internalType: "address",
            },
            {
              name: "_usdeAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "_wethAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "accrueInterest",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "borrow",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "calculateDynamicLTV",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "calculateHealth",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getConversionPrice",
          inputs: [
            {
              name: "amountIn",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "dataFeedIn",
              type: "address",
              internalType: "contract AggregatorV2V3Interface",
            },
            {
              name: "dataFeedOut",
              type: "address",
              internalType: "contract AggregatorV2V3Interface",
            },
          ],
          outputs: [
            {
              name: "amountOut",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDataFeedLatestAnswer",
          inputs: [
            {
              name: "dataFeed",
              type: "address",
              internalType: "contract AggregatorV2V3Interface",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isHealty",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lastUpdate",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "positions",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "supplyShares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "borrowShares",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "collateral",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "repay",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supply",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "supplyCollateral",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "totalBorrowAssets",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalBorrowShares",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupplyAssets",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupplyShares",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "usdeAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "wethAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [
            {
              name: "shares",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawCollateral",
          inputs: [
            {
              name: "assets",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "error",
          name: "InsufficientAssets",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientCollateral",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientShares",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientSupply",
          inputs: [],
        },
        {
          type: "error",
          name: "NegativeAnswer",
          inputs: [],
        },
        {
          type: "error",
          name: "NoOutstandingBorrow",
          inputs: [],
        },
        {
          type: "error",
          name: "PositionNotHealthy",
          inputs: [],
        },
        {
          type: "error",
          name: "RepayExceedsBorrow",
          inputs: [],
        },
        {
          type: "error",
          name: "ZeroAssets",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;
